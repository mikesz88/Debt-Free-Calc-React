{"version":3,"sources":["components/Header.jsx","components/EnterAmounts.jsx","components/ComputedPayments.jsx","components/MakePayment.jsx","components/PaymentHistory.jsx","components/CalcContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","React","Component","EnterAmounts","props","minimumPrincipal","updateState","Number","data","debt","toFixed","minimumInterest","interestRate","calcAmountOfPayments","paymentCount","handleSubmit","e","preventDefault","this","resetState","onSubmit","htmlFor","type","name","id","onChange","target","value","autoComplete","step","placeholder","onClick","ComputedPayments","principalAmt","interestAmt","normalPayments","MakePayment","warningLabel","level","formDiv","document","getElementById","warning","createElement","innerHTML","appendChild","checkAmount","remove","payment","newPayment","newDebt","date","Date","now","paymentHistory","debtFree","PaymentHistory","map","object","index","original","CalcContainer","state","func","setState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uOAGMA,E,4JAEF,WACI,OACI,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,kCAAf,UACI,sDACA,kE,GAPCC,IAAMC,WAcZH,I,OCwDAI,E,kDArEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,iBAAmB,SAACC,GAChBA,EAAY,eAAgBC,QAAiC,IAAxB,EAAKH,MAAMI,KAAKC,MAAcC,QAAQ,MAN5D,EASnBC,gBAAkB,SAACL,GACfA,EAAY,cAAeC,QAAU,EAAKH,MAAMI,KAAKI,aAAe,IAAO,GAAM,EAAKR,MAAMI,KAAKC,MAAMC,QAAQ,MAVhG,EAanBG,qBAAuB,SAACP,GAGpB,IAFA,IAAIG,EAAO,EAAKL,MAAMI,KAAKC,KACvBK,EAAe,EACZL,EAAO,KAAM,CAEhBA,GADwB,IAAPA,EAAa,IAE9BK,IAEJR,EAAY,iBAAkBQ,IArBf,EAwBnBC,aAAe,SAACC,EAAGV,GACfU,EAAEC,iBACF,EAAKZ,iBAAiBC,GACtB,EAAKK,gBAAgBL,GACrB,EAAKO,qBAAqBP,IA5BX,E,0CA+BnB,WAAU,IAAD,OACL,EAAkCY,KAAKd,MAAhCE,EAAP,EAAOA,YAAaa,EAApB,EAAoBA,WAGpB,OACI,sBAAMnB,UAAU,yCAAhB,cACI,oDACA,uBAAMoB,SAAU,SAACJ,GAAD,OAAO,EAAKD,aAAaC,EAAGV,IAA5C,UACI,uBAAOe,QAAQ,OAAf,yBACA,uBACIrB,UAAU,OACVsB,KAAK,SACLC,KAAK,OACLC,GAAG,OACHC,SAAU,SAACT,GAAD,OAAOV,EAAY,OAAQU,EAAEU,OAAOC,QAC9CC,aAAa,MACbC,KAAK,OACLC,YAAY,0BAEhB,uBAAOT,QAAQ,WAAf,sBACA,uBACIrB,UAAU,OACVsB,KAAK,SACLC,KAAK,WACLC,GAAG,WACHC,SAAU,SAACT,GAAD,OAAOV,EAAY,eAAgBU,EAAEU,OAAOC,QACtDC,aAAa,MACbC,KAAK,OACLC,YAAY,eAEhB,uBAAOC,QAASZ,EAAYnB,UAAU,SAASsB,KAAK,QAAQK,MAAM,2BAClE,sD,GAhEO1B,IAAMC,WCA3B8B,E,4JAEF,WACI,IAAOxB,EAAQU,KAAKd,MAAbI,KAEP,OACI,sBAAMR,UAAU,6CAAhB,UACI,mDACA,sBAAKA,UAAU,iBAAf,UACI,oDAAuBQ,EAAKyB,aAAezB,EAAK0B,eAChD,gEACA,8CAAiB3B,OAAOC,EAAK0B,YAAYxB,QAAQ,OACjD,+CAAkBH,OAAOC,EAAKyB,aAAavB,QAAQ,OACnD,gCAAMF,EAAK2B,eAAX,iD,GAbWlC,IAAMC,WAoBtB8B,I,OC+FAI,E,kDAjHX,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IAGVC,iBAAmB,SAACC,GAChBA,EAAY,eAAgBC,QAAiC,IAAxB,EAAKH,MAAMI,KAAKC,MAAcC,QAAQ,MAL5D,EAQnBC,gBAAkB,SAACL,GACfA,EAAY,cAAeC,QAAU,EAAKH,MAAMI,KAAKI,aAAe,IAAO,GAAM,EAAKR,MAAMI,KAAKC,MAAMC,QAAQ,MAThG,EAYnB2B,aAAe,SAACC,GACZ,IAAIC,EAAUC,SAASC,eAAe,kBAClCC,EAAUF,SAASG,cAAc,OACrCD,EAAQlB,GAAI,oBACE,WAAVc,EACAI,EAAQE,UAAR,kEAGiB,YAAVN,IACPI,EAAQE,UAAR,oEAIJL,EAAQM,YAAYH,IAzBL,EA4BnBI,YAAc,WACV,IAAMtC,EAAO,EAAKJ,MAAMI,KAEpBkC,EAAUF,SAASC,eAAe,qBAKtC,OAJGC,GACCA,EAAQK,SAGRvC,EAAKwC,QAAUxC,EAAKyB,aAAezB,EAAK0B,aACxC,EAAKG,aAAa,WACX,GACA7B,EAAKwC,QAAUxC,EAAKC,KAAOD,EAAK0B,aACvC,EAAKG,aAAa,YACX,QAFJ,GAvCQ,EA6CnBtB,aAAe,SAACC,EAAGV,GAEf,GADAU,EAAEC,kBACE,EAAK6B,cAAT,CAGI,IAAMtC,EAAO,EAAKJ,MAAMI,KACpByC,EAAa,CACbhB,aAAc1B,QAAQC,EAAKwC,QAAUxC,EAAK0B,aAAaxB,QAAQ,IAC/DwB,YAAa3B,OAAQC,EAAK0B,YAAaxB,QAAQ,IAC/CwC,QAAS3C,QAAQC,EAAKC,MAAQD,EAAKwC,QAAUxC,EAAK0B,cAAcxB,QAAQ,IACxEyC,KAAMC,KAAKC,OAGf/C,EAAY,iBAAD,sBAAuBE,EAAK8C,gBAA5B,CAA4CL,KACvD3C,EAAY,OAAQ2C,EAAWC,SAAS,WACpC,EAAK7C,iBAAiBC,GACtB,EAAKK,gBAAgBL,GACM,IAAvB2C,EAAWC,SACX,EAAKK,cAGbjD,EAAY,UAAW,KAlEZ,EAsEnBiD,SAAW,WACP,IAAIhB,EAAUC,SAASC,eAAe,kBAClCc,EAAWf,SAASG,cAAc,OACtCY,EAAS/B,GAAI,oBACb+B,EAASX,UAAT,4LAKAL,EAAQM,YAAYU,IA/EL,E,0CAmFnB,WAAU,IAAD,OACL,EAA4BrC,KAAKd,MAA1BI,EAAP,EAAOA,KAAMF,EAAb,EAAaA,YAEb,OACI,sBAAKN,UAAU,wCAAf,UACI,oBAAIA,UAAU,eAAd,4BACA,sBAAKA,UAAU,iBAAf,UACA,mDAAsBO,OAAOC,EAAK0B,YAAYxB,QAAQ,OACtD,qDAAwBH,OAAOC,EAAKyB,aAAavB,QAAQ,OACzD,mDAAsBH,QAAQC,EAAKyB,aAAezB,EAAK0B,aAAaxB,QAAQ,UAE5E,uBAAMU,SAAU,SAACJ,GAAD,OAAO,EAAKD,aAAaC,EAAGV,IAAckB,GAAG,iBAA7D,UACI,uBAAOH,QAAQ,UAAf,gCACA,uBACIrB,UAAU,OACVsB,KAAK,SACLC,KAAK,UAAUC,GAAG,UAClBI,aAAa,MACbC,KAAK,OACLJ,SAAU,SAACT,GAAD,OAAOV,EAAY,UAAWU,EAAEU,OAAOC,QACjDG,YAAatB,EAAKyB,aAAezB,EAAK0B,YACtCP,MAAOnB,EAAKwC,UAEhB,wBAAQ1B,KAAK,SAAStB,UAAU,SAAhC,sC,GA5GMC,IAAMC,WCE1BsD,E,4JAEF,WACI,IAAMF,EAAmBpC,KAAKd,MAAMI,KAA9B8C,eAEN,OACI,sBAAKtD,UAAU,2CAAf,UACI,iDACA,sBAAKA,UAAU,uBAAf,UAEI,gCACI,kDACA,6BACKsD,EAAeG,KAAI,SAACC,EAAQC,GAAT,OAChB,6BAAuBA,EAAM,GAApBD,EAAOP,cAI5B,gCACI,iDACA,6BACKG,EAAeG,KAAI,SAAAC,GAAM,OACtB,mCAAwBA,EAAOzB,eAAtByB,EAAOP,cAI5B,gCACI,gDACA,6BACKG,EAAeG,KAAI,SAAAC,GAAM,OACtB,mCAAwBA,EAAOxB,cAAtBwB,EAAOP,cAI5B,gCACI,8CACA,6BACKG,EAAeG,KAAI,SAAAC,GAAM,OACtB,mCAAwBA,EAAOR,UAAtBQ,EAAOP,wB,GAtCnBlD,IAAMC,WAgDpBsD,IC9CTI,EAAW,CACbnD,KAAM,EACNG,aAAc,EACdqB,aAAc,EACdC,YAAa,EACboB,eAAgB,GAChBN,QAAS,EACTb,eAAgB,GAyDL0B,E,kDArDX,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IAIVE,YAAc,SAACiB,EAAMuC,EAAOC,GACX,mBAATxC,IACAuC,EAAQvD,OAAOuD,IAEnB,EAAKE,SAAL,eACKzC,EAAOuC,GACTC,IAXY,EAcnB5C,WAAa,WACT,EAAK6C,SAASJ,GACd,IAAIL,EAAWf,SAASC,eAAe,qBACnCc,GACAA,EAASR,UAhBb,EAAKe,MAAQF,EAFE,E,0CAuBnB,WACI,OACI,qBAAK5D,UAAU,YAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,cAAC,EAAD,CACAQ,KAAOU,KAAK4C,MACZxD,YAAcY,KAAKZ,YACnBa,WAAaD,KAAKC,aAElB,cAAC,EAAD,CACAX,KAAOU,KAAK4C,MACZxD,YAAcY,KAAKZ,YACnBa,WAAaD,KAAKC,aAElB,cAAC,EAAD,CACAX,KAAOU,KAAK4C,MACZxD,YAAcY,KAAKZ,YACnBa,WAAaD,KAAKC,aAElB,cAAC,EAAD,CACAX,KAAOU,KAAK4C,MACZxD,YAAcY,KAAKZ,YACnBa,WAAaD,KAAKC,sB,GA9CVlB,IAAMC,W,MCHnB+D,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASC,eAAe,SAM1ByB,M","file":"static/js/main.6cb72a90.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"margin padding header-container\">\n                    <h1>Debt-Free Calculator</h1>\n                    <div>Time to get debt free!</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\nclass EnterAmounts extends React.Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n\n    }\n\n    minimumPrincipal = (updateState) => {\n        updateState('principalAmt', Number(((this.props.data.debt) * 0.01).toFixed(2)));\n    }\n\n    minimumInterest = (updateState) => {\n        updateState('interestAmt', Number((((this.props.data.interestRate / 100) / 12) * this.props.data.debt).toFixed(2)));        \n    }\n\n    calcAmountOfPayments = (updateState) => {\n        let debt = this.props.data.debt;\n        let paymentCount = 0;\n        while (debt > 0.01) {\n            let minPayment = debt * 100 / 10000;\n            debt -= minPayment;\n            paymentCount++;\n        }\n        updateState('normalPayments', paymentCount);\n    }\n\n    handleSubmit = (e, updateState) => {\n        e.preventDefault();\n        this.minimumPrincipal(updateState);\n        this.minimumInterest(updateState);\n        this.calcAmountOfPayments(updateState)\n    } \n\n    render() {\n        const {updateState, resetState} = this.props;\n\n\n        return (\n            <div  className=\"card-container enter-amounts-container\"> {/* Enter Amount Div */}\n                <h2>Enter Your Amounts</h2>\n                <form onSubmit={(e) => this.handleSubmit(e, updateState)}>\n                    <label htmlFor=\"debt\">Debt Amount</label>\n                    <input\n                        className=\"type\" \n                        type=\"number\" \n                        name=\"debt\" \n                        id=\"debt\" \n                        onChange={(e) => updateState('debt', e.target.value)} \n                        autoComplete=\"off\" \n                        step=\"0.01\" \n                        placeholder=\"12500.56 = $12,500.56\"\n                    />\n                    <label htmlFor=\"interest\">Interest</label>\n                    <input\n                        className=\"type\" \n                        type=\"number\" \n                        name=\"interest\" \n                        id=\"interest\" \n                        onChange={(e) => updateState('interestRate', e.target.value)} \n                        autoComplete=\"off\"\n                        step=\"0.01\" \n                        placeholder=\"2.5 = 2.5%\"\n                    />\n                    <input onClick={resetState} className=\"button\" type=\"reset\" value=\"Click here to restart!\" />\n                    <button>Submit</button>\n                </form>\n            </div> \n        )\n    }\n}\n\nexport default EnterAmounts;","import React from 'react';\n\nclass ComputedPayments extends React.Component {\n    \n    render() {\n        const {data} = this.props;\n\n        return (\n            <div  className=\"card-container payment-breakdown-container\">\n                <h2>Payment Breakdown</h2>\n                <div className=\"flex-container\">\n                    <h4>Minimum Payment: ${data.principalAmt + data.interestAmt}</h4>\n                    <div>1% Minimum Principal Required</div>\n                    <div>Interest: ${Number(data.interestAmt.toFixed(2))}</div>\n                    <div>Principal: ${Number(data.principalAmt.toFixed(2))}</div>\n                    <div>{data.normalPayments} normal payments to be debt free!</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ComputedPayments;","import React from 'react';\n\nclass MakePayment extends React.Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n\n    minimumPrincipal = (updateState) => {\n        updateState('principalAmt', Number(((this.props.data.debt) * 0.01).toFixed(2)));\n    }\n\n    minimumInterest = (updateState) => {\n        updateState('interestAmt', Number((((this.props.data.interestRate / 100) / 12) * this.props.data.debt).toFixed(2)));        \n    }\n\n    warningLabel = (level) => {\n        let formDiv = document.getElementById('submit-Payment');\n        let warning = document.createElement('div');\n        warning.id ='principal-warning';\n        if (level === 'tooLow') {\n            warning.innerHTML = `\n            The payment was too low! Try again!\n            `;\n        } else if (level === 'tooHigh') {\n            warning.innerHTML = `\n            The payment was too high! Try again!\n            `;\n        }\n        formDiv.appendChild(warning);\n    }\n\n    checkAmount = () => { \n        const data = this.props.data;\n        /* I need to handle the conditions between completely finishing the debt, edge cases, and this div below. Then I can design! */\n        let warning = document.getElementById('principal-warning');\n        if(warning) {\n            warning.remove();\n        }\n        \n        if (data.payment < data.principalAmt + data.interestAmt) {\n            this.warningLabel('tooLow')\n            return true;\n        } else if (data.payment > data.debt + data.interestAmt) {\n            this.warningLabel('tooHigh')\n            return true;\n        }\n    }\n\n    handleSubmit = (e, updateState) => {\n        e.preventDefault();\n        if (this.checkAmount()) {\n            return;\n        } else {\n            const data = this.props.data;\n            let newPayment = {\n                principalAmt: Number((data.payment - data.interestAmt).toFixed(2)),\n                interestAmt: Number((data.interestAmt).toFixed(2)),\n                newDebt: Number((data.debt - (data.payment - data.interestAmt)).toFixed(2)),\n                date: Date.now()\n            }\n    \n            updateState('paymentHistory', [...data.paymentHistory, newPayment]);\n            updateState('debt', newPayment.newDebt, () => {\n                this.minimumPrincipal(updateState);\n                this.minimumInterest(updateState);\n                if (newPayment.newDebt === 0) {\n                    this.debtFree();\n                }\n            });\n            updateState('payment', 0);\n        }\n    }\n\n    debtFree = () => {\n        let formDiv = document.getElementById('submit-Payment');\n        let debtFree = document.createElement('div');\n        debtFree.id ='debt-free-message';\n        debtFree.innerHTML = `\n        You have officially paid off your debt! FANTASTIC! \n        <i class=\"fas fa-thumbs-up\"></i>\n        Click the 'CLICK HERE TO RESTART' to calculate another debt!\n        `;\n        formDiv.appendChild(debtFree);\n    }\n\n\n    render() {\n        const {data, updateState} = this.props;\n\n        return (\n            <div className=\"card-container make-payment-container\">\n                <h2 className=\"payment-info\">Make a Payment</h2>\n                <div className=\"flex-container\">\n                <p>Interest Payment ${Number(data.interestAmt.toFixed(2))}</p> \n                <p>Minimum Principal: ${Number(data.principalAmt.toFixed(2))}</p>\n                <p>Minimum Payment: ${Number((data.principalAmt + data.interestAmt).toFixed(2))}</p>\n                </div>\n                <form onSubmit={(e) => this.handleSubmit(e, updateState)} id=\"submit-Payment\">\n                    <label htmlFor=\"payment\">Enter your Payment</label>\n                    <input \n                        className=\"type\" \n                        type=\"number\" \n                        name=\"payment\" id=\"payment\" \n                        autoComplete=\"off\" \n                        step=\"0.01\" \n                        onChange={(e) => updateState('payment', e.target.value)} \n                        placeholder={data.principalAmt + data.interestAmt}\n                        value={data.payment}\n                    />\n                    <button type=\"submit\" className=\"button\">Submit Payment</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default MakePayment;","import React from 'react';\n\n\n\nclass PaymentHistory extends React.Component {\n\n    render() { \n        let { paymentHistory } = this.props.data;\n\n        return (\n            <div className=\"card-container payment-history-container\">\n                <h2>Payment History</h2>\n                <div className=\"payment-history-flex\">\n\n                    <div>\n                        <div>Payment Counter</div>\n                        <ul>\n                            {paymentHistory.map((object, index) => (\n                                <li key={object.date}>{index+1}</li>\n                            ))} \n                        </ul>\n                    </div>\n                    <div>\n                        <div>Principal Paid</div>\n                        <ul>\n                            {paymentHistory.map(object => (\n                                <li key={object.date}>${object.principalAmt}</li>\n                            ))} \n                        </ul>\n                    </div>\n                    <div>\n                        <div>Interest Paid</div>\n                        <ul>\n                            {paymentHistory.map(object => (\n                                <li key={object.date}>${object.interestAmt}</li>\n                            ))} \n                        </ul>\n                    </div>\n                    <div>\n                        <div>New Balance</div>\n                        <ul>\n                            {paymentHistory.map(object => (\n                                <li key={object.date}>${object.newDebt}</li>\n                            ))} \n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PaymentHistory;","import React from 'react';\nimport EnterAmounts from './EnterAmounts'; // Card 1\nimport ComputedPayments from './ComputedPayments';\nimport MakePayment from './MakePayment';\nimport PaymentHistory from './PaymentHistory';\n\nconst original = {\n    debt: 0,\n    interestRate: 0,\n    principalAmt: 0,\n    interestAmt: 0,\n    paymentHistory: [],\n    payment: 0,\n    normalPayments: 0\n}\n\nclass CalcContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = original\n    }\n\n    updateState = (name, state, func) => {\n        if (name !== 'paymentHistory') {\n            state = Number(state);\n        }\n        this.setState({\n            [name]: state\n        }, func)\n    }\n\n    resetState = () => {\n        this.setState(original);\n        let debtFree = document.getElementById('debt-free-message');\n        if (debtFree) {\n            debtFree.remove();\n        }\n      }\n      \n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"calc-container padding\">\n                    <EnterAmounts \n                    data={ this.state }\n                    updateState={ this.updateState }\n                    resetState={ this.resetState }\n                    />\n                    <ComputedPayments \n                    data={ this.state }\n                    updateState={ this.updateState }\n                    resetState={ this.resetState }\n                    />\n                    <MakePayment\n                    data={ this.state }\n                    updateState={ this.updateState }\n                    resetState={ this.resetState }\n                    />\n                    <PaymentHistory \n                    data={ this.state }\n                    updateState={ this.updateState }\n                    resetState={ this.resetState }\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CalcContainer;","import Header from \"./components/Header\";\nimport CalcContainer from \"./components/CalcContainer\";\nimport './ComponentCSS/component.css';\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <CalcContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}